{"ast":null,"code":"import _regeneratorRuntime from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/src/components/cloudinaryWidget.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Button } from \"antd\";\nvar URL = \"http://localhost:8080/api/createRecord\";\nvar accounts;\n\nvar CloudinaryWidget =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CloudinaryWidget, _React$Component);\n\n  function CloudinaryWidget() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CloudinaryWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CloudinaryWidget)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.getMetamask =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var provider;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (typeof window.ethereum !== 'undefined' || typeof window.web3 !== 'undefined') {\n                // Web3 browser user detected. You can now use the provider.\n                provider = window['ethereum'] || window.web3.currentProvider;\n              }\n\n              _context.next = 3;\n              return window.ethereum.enable();\n\n            case 3:\n              accounts = _context.sent;\n              console.log(accounts);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.showWidget = function () {\n      var widget = window.cloudinary.createUploadWidget({\n        cloudName: \"diegolealb\",\n        uploadPreset: \"default_preset\"\n      }, function (error, result) {\n        _this.checkUploadResult(result);\n\n        if (result.event === 'success') {\n          _this.postRequest(result);\n\n          _this.sendTransaction();\n        }\n      });\n      widget.open();\n    };\n\n    _this.sendTransaction =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = [{\n                \"from\": accounts,\n                \"to\": \"0x4fc03322307e64842c841198750be5839e815ca7\",\n                \"gas\": \"0x76c0\",\n                // 30400\n                \"gasPrice\": \"0x9184e72a000\",\n                // 10000000000000\n                \"value\": \"100\" // 2441406250\n\n              }];\n              window.ethereum.sendAsync({\n                method: 'eth_sendTransaction',\n                params: params,\n                from: accounts[0] // Provide the user's account to use.\n\n              }, function (err, result) {\n                if (err) {\n                  console.err(err);\n                  return;\n                }\n\n                ;\n                console.log(result);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.checkUploadResult = function (resultEvent) {\n      if (resultEvent.event === \"success\") {}\n\n      console.log('resultEvent: ', resultEvent);\n    };\n\n    _this.postRequest = function (payload) {\n      axios.post(URL, payload).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CloudinaryWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMetamask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showWidget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Add Image \"), \" \");\n    }\n  }]);\n\n  return CloudinaryWidget;\n}(React.Component);\n\nexport default CloudinaryWidget;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutterStock/shutter-stock/src/components/cloudinaryWidget.js"],"names":["React","axios","Button","URL","accounts","CloudinaryWidget","getMetamask","window","ethereum","web3","provider","currentProvider","enable","console","log","showWidget","widget","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","checkUploadResult","event","postRequest","sendTransaction","open","params","sendAsync","method","from","err","resultEvent","payload","post","then","res","catch","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport {\n    Button\n} from \"antd\";\n\nconst URL = \"http://localhost:8080/api/createRecord\";\nlet accounts;\n\nclass CloudinaryWidget extends React.Component {\n    componentDidMount() {\n        this.getMetamask();\n    }\n\n    getMetamask = async () => {\n        if (typeof window.ethereum !== 'undefined' || (typeof window.web3 !== 'undefined')) {\n\n            // Web3 browser user detected. You can now use the provider.\n            const provider = window['ethereum'] || window.web3.currentProvider\n        }\n        accounts = await window.ethereum.enable();\n        console.log(accounts);\n    }\n\n    showWidget = () => {\n        let widget = window.cloudinary.createUploadWidget({\n            cloudName: \"diegolealb\",\n            uploadPreset: \"default_preset\"\n        }, (error, result) => {\n            this.checkUploadResult(result);\n            if (result.event === 'success') {\n                this.postRequest(result);\n                this.sendTransaction();\n            }\n        });\n        widget.open();\n    }\n\n    sendTransaction = async () => {\n        let params = [{\n            \"from\": accounts,\n            \"to\": \"0x4fc03322307e64842c841198750be5839e815ca7\",\n            \"gas\": \"0x76c0\", // 30400\n            \"gasPrice\": \"0x9184e72a000\", // 10000000000000\n            \"value\": \"100\", // 2441406250\n        }];\n\n        window.ethereum.sendAsync({\n            method: 'eth_sendTransaction',\n            params: params,\n            from: accounts[0], // Provide the user's account to use.\n        }, function (err, result) {\n            if (err) {\n                console.err(err)\n                return;\n            };\n            \n            console.log(result);\n        })\n    }\n\n    checkUploadResult = (resultEvent) => {\n        if (resultEvent.event === \"success\") {}\n        console.log('resultEvent: ', resultEvent);\n    };\n\n    postRequest = (payload) => {\n        axios.post(URL, payload)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    };\n\n    render() {\n        return ( <\n            div >\n            <\n            Button type = \"primary\"\n            onClick = {\n                this.showWidget\n            } > Add Image < /Button> <\n            /div>\n        )\n    }\n}\n\n\nexport default CloudinaryWidget;"]},"metadata":{},"sourceType":"module"}