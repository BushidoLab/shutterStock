{"ast":null,"code":"import _classCallCheck from \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/src/components/form.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Image, Transformation, CloudinaryContext } from \"cloudinary-react\";\nimport { Button } from \"antd\";\nimport \"./form.css\"; // Format for api calls is https://<apiKey>:<apiSecret>@api.cloudinary.com/<path>\n// const CLOUDINARY_URL=\"https://684518815981178:28_JNXsgqpczG-2Rl4cCd4oZ1PM@api.cloudinary.com/v1_1/diegolealb/resources/image\";\n\nvar ImageUploadForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageUploadForm, _React$Component);\n\n  function ImageUploadForm(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUploadForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUploadForm).call(this, props));\n\n    _this.showWidget = function () {\n      var widget = window.cloudinary.createUploadWidget({\n        cloudName: \"diegolealb\",\n        uploadPreset: \"default_preset\"\n      }, function (error, result) {// this.checkUploadResult(result) \n      });\n      widget.open();\n    };\n\n    _this.state = {\n      gallery: [],\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(ImageUploadForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }).then(function (res) {\n        _this2.setState({\n          gallery: res.data\n        });\n      }).catch(function (err) {\n        console.error(\"Axios call: \", err);\n      });\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      this.setState({\n        modalVisible: true\n      });\n    } // checkUploadResult = (resultEvent) => {\n    //     if (resultEvent.event === \"success\") {\n    //         console.log(this.props.currentUser.id);\n    //         this.props.postPhoto({user_id: this.props.currentUser.id,\n    //         caption: \"\",\n    //         url: resultEvent.info.secure_url})\n    //           .then(this.props.history.push(\"/profile\"))\n    //     }\n    //     console.log(resultEvent)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var gallery = this.state.gallery;\n      var waterMark = {\n        fontFamily: \"Arial\",\n        fontSize: 30,\n        fontWeight: \"bold\",\n        textColor: \"rgba(255, 255, 255, 0.35)\",\n        transform: \"rotate(20deg)\",\n        text: \"Sample version only\"\n      };\n\n      if (gallery.length !== 0) {\n        return React.createElement(\"div\", {\n          className: \"mainContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Gallery\"), React.createElement(Button, {\n          type: \"primary\",\n          onClick: this.showWidget,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Add Image\"), React.createElement(CloudinaryContext, {\n          cloudName: \"diegolealb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"imageContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, gallery.map(function (data) {\n          return data.public_id.includes(\"shutterStock\") ? React.createElement(Button, {\n            key: data.public_id,\n            className: \"container\",\n            onClick: _this3.showModal,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(Image, {\n            publicId: data.public_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(Transformation, {\n            width: \"400\",\n            height: \"400\",\n            crop: \"scale\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }), React.createElement(Transformation, {\n            overlay: waterMark,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          })))) : null;\n        }))));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return ImageUploadForm;\n}(React.Component);\n\nexport default ImageUploadForm;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutterStock/shutter_stock/src/components/form.js"],"names":["React","axios","Image","Transformation","CloudinaryContext","Button","ImageUploadForm","props","showWidget","widget","window","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","open","state","gallery","modalVisible","get","headers","then","res","setState","data","catch","err","console","waterMark","fontFamily","fontSize","fontWeight","textColor","transform","text","length","map","public_id","includes","showModal","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n    Image,\n    Transformation,\n    CloudinaryContext\n} from \"cloudinary-react\";\n\nimport { Button } from \"antd\";\nimport \"./form.css\";\n\n// Format for api calls is https://<apiKey>:<apiSecret>@api.cloudinary.com/<path>\n// const CLOUDINARY_URL=\"https://684518815981178:28_JNXsgqpczG-2Rl4cCd4oZ1PM@api.cloudinary.com/v1_1/diegolealb/resources/image\";\n\nclass ImageUploadForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gallery: [],\n            modalVisible: false,\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"http://localhost:8080\", {\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\"\n            }\n        })\n        .then(res => {\n            this.setState({ gallery: res.data });\n        })\n        .catch(err => {\n            console.error(\"Axios call: \",err);\n        })\n    }\n    \n    showModal() {\n        this.setState({\n            modalVisible: true,\n        })\n    }\n\n    // checkUploadResult = (resultEvent) => {\n    //     if (resultEvent.event === \"success\") {\n    //         console.log(this.props.currentUser.id);\n    //         this.props.postPhoto({user_id: this.props.currentUser.id,\n    //         caption: \"\",\n    //         url: resultEvent.info.secure_url})\n    //           .then(this.props.history.push(\"/profile\"))\n    //     }\n    //     console.log(resultEvent)\n    // }\n\n    showWidget = () => {\n        let widget = window.cloudinary.createUploadWidget({\n            cloudName: \"diegolealb\",\n            uploadPreset: \"default_preset\"\n        }, (error, result) => { \n            // this.checkUploadResult(result) \n        });\n        widget.open();\n    }\n\n    render() {\n        let gallery = this.state.gallery;\n        let waterMark = {\n            fontFamily: \"Arial\", \n            fontSize: 30, \n            fontWeight: \"bold\", \n            textColor: \"rgba(255, 255, 255, 0.35)\",\n            transform: \"rotate(20deg)\",\n            text: \"Sample version only\"\n        }\n\n        if (gallery.length !== 0) {\n            return (\n                <div className=\"mainContainer\">\n                    <h1>Gallery</h1>\n                    <Button type=\"primary\" onClick={this.showWidget}>Add Image</Button>\n                    <CloudinaryContext cloudName=\"diegolealb\">\n                        <div className=\"imageContainer\">\n                        {gallery.map(data => {\n                            return (\n                                data.public_id.includes(\"shutterStock\") ?\n                                <Button key={data.public_id} className=\"container\" onClick={this.showModal}>\n                                    <div className=\"img\">\n                                        <Image publicId={data.public_id}>\n                                            <Transformation \n                                                width=\"400\"\n                                                height=\"400\"\n                                                crop=\"scale\"\n                                            />\n                                            <Transformation \n                                                overlay={waterMark}\n                                            />\n                                        </Image>\n                                    </div>\n                                </Button>\n                                : null\n                            )\n                        })}\n                        </div>\n                    </CloudinaryContext>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default ImageUploadForm;"]},"metadata":{},"sourceType":"module"}