{"ast":null,"code":"import _classCallCheck from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/src/components/cloudinaryWidget.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport web3 from 'web3';\nimport { Button } from \"antd\";\nvar URL = \"http://localhost:8080/api/createRecord\";\n\nvar CloudinaryWidget =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CloudinaryWidget, _React$Component);\n\n  function CloudinaryWidget() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CloudinaryWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CloudinaryWidget)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.showWidget = function () {\n      var widget = window.cloudinary.createUploadWidget({\n        cloudName: \"diegolealb\",\n        uploadPreset: \"default_preset\"\n      }, function (error, result) {\n        _this.checkUploadResult(result);\n\n        if (result.event === 'success') {\n          _this.postRequest(result);\n        }\n      });\n      console.log(widget);\n      widget.open();\n    };\n\n    _this.checkUploadResult = function (resultEvent) {\n      if (resultEvent.event === \"success\") {}\n\n      console.log('resultEvent: ', resultEvent);\n    };\n\n    _this.postRequest = function (payload) {\n      axios.post(URL, payload).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CloudinaryWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(window);\n\n      if (web3) {\n        web3.eth.getAccounts(function (error, accounts) {\n          if (error) {\n            throw new Error(\"Getting accounts error \".concat(error));\n          }\n\n          _this2.setState({\n            wallet: accounts[0]\n          });\n        });\n      } else {\n        console.log('Please unlock your metamask');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showWidget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Add Image\"));\n    }\n  }]);\n\n  return CloudinaryWidget;\n}(React.Component);\n\nexport default CloudinaryWidget;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutterStock/shutter-stock/src/components/cloudinaryWidget.js"],"names":["React","axios","web3","Button","URL","CloudinaryWidget","showWidget","widget","window","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","checkUploadResult","event","postRequest","console","log","open","resultEvent","payload","post","then","res","catch","err","eth","getAccounts","accounts","Error","setState","wallet","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,MAAT,QAAuB,MAAvB;AAEA,IAAMC,GAAG,GAAC,wCAAV;;IACMC,gB;;;;;;;;;;;;;;;;;;UAeFC,U,GAAa,YAAM;AACf,UAAIC,MAAM,GAAGC,MAAM,CAACC,UAAP,CAAkBC,kBAAlB,CAAqC;AAC9CC,QAAAA,SAAS,EAAE,YADmC;AAE9CC,QAAAA,YAAY,EAAE;AAFgC,OAArC,EAGV,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAClB,cAAKC,iBAAL,CAAuBD,MAAvB;;AACA,YAAIA,MAAM,CAACE,KAAP,KAAiB,SAArB,EAAgC;AAC5B,gBAAKC,WAAL,CAAiBH,MAAjB;AACH;AACJ,OARY,CAAb;AASAI,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAA,MAAAA,MAAM,CAACa,IAAP;AACH,K;;UAEDL,iB,GAAoB,UAACM,WAAD,EAAiB;AACjC,UAAIA,WAAW,CAACL,KAAZ,KAAsB,SAA1B,EAAqC,CACpC;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,WAA7B;AACH,K;;UAEDJ,W,GAAc,UAACK,OAAD,EAAa;AACvBrB,MAAAA,KAAK,CAACsB,IAAN,CAAWnB,GAAX,EAAgBkB,OAAhB,EACKE,IADL,CACU,UAAAC,GAAG,EAAI;AACTP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,OAHL,EAIKC,KAJL,CAIW,UAAAC,GAAG,EAAI;AACVT,QAAAA,OAAO,CAACL,KAAR,CAAcc,GAAd;AACH,OANL;AAOH,K;;;;;;;wCA1CmB;AAAA;;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;;AACA,UAAIN,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAAC0B,GAAL,CAASC,WAAT,CAAqB,UAAChB,KAAD,EAAQiB,QAAR,EAAqB;AACxC,cAAIjB,KAAJ,EAAW;AACT,kBAAM,IAAIkB,KAAJ,kCAAoClB,KAApC,EAAN;AACD;;AACD,UAAA,MAAI,CAACmB,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAEH,QAAQ,CAAC,CAAD;AAAlB,WAAd;AACD,SALD;AAMD,OAPD,MAOO;AACLZ,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;;6BAgCM;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAKb,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH;;;;EAnD0BN,KAAK,CAACkC,S;;AAuDrC,eAAe7B,gBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport web3 from 'web3';\n\nimport { Button } from \"antd\";\n\nconst URL=\"http://localhost:8080/api/createRecord\";\nclass CloudinaryWidget extends React.Component {\n    componentDidMount() {\n        console.log(window);\n        if (web3) {\n          web3.eth.getAccounts((error, accounts) => {\n            if (error) {\n              throw new Error(`Getting accounts error ${error}`);\n            }\n            this.setState({ wallet: accounts[0] });\n          });\n        } else {\n          console.log('Please unlock your metamask');\n        }\n      }\n\n    showWidget = () => {\n        let widget = window.cloudinary.createUploadWidget({\n            cloudName: \"diegolealb\",\n            uploadPreset: \"default_preset\"\n        }, (error, result) => {\n            this.checkUploadResult(result);\n            if (result.event === 'success') {\n                this.postRequest(result);\n            }\n        });\n        console.log(widget);\n        widget.open();\n    }\n\n    checkUploadResult = (resultEvent) => {\t\n        if (resultEvent.event === \"success\") {\t\n        }\t\n        console.log('resultEvent: ', resultEvent);\t\t\n    };\n\n    postRequest = (payload) => {\n        axios.post(URL, payload)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    };\n\n    render() {\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showWidget}>Add Image</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default CloudinaryWidget;\n"]},"metadata":{},"sourceType":"module"}