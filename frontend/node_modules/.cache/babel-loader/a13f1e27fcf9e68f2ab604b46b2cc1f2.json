{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/ethereum/shutterStock/shutter_stock/src/components/form.js\";\nimport React, { useState } from 'react';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\n\nfunction onPhotoSelected(files) {\n  var _this = this;\n\n  var url = \"https://api.cloudinary.com/v1_1/diegolealb/upload\";\n  var title = this.titleEl.value;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var file = _step.value;\n      var photoId = _this.photoId++;\n      var fileName = file.name;\n      request.post(url).field('upload_preset', _this.context.uploadPreset).field('file', file).field('multiple', true).field('tags', title ? \"myphotoalbum,\".concat(title) : 'myphotoalbum').field('context', title ? \"photo=\".concat(title) : '').on('progress', function (progress) {\n        return _this.onPhotoUploadProgress(photoId, file.name, progress);\n      }).end(function (error, response) {\n        _this.onPhotoUploaded(photoId, fileName, response);\n      });\n    };\n\n    for (var _iterator = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction UploadForm(props) {\n  var _this2 = this;\n\n  // [image, setImage] = useState('');\n  return React.createElement(CloudinaryContext, {\n    cloudName: \"diegolealb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Hello\"), React.createElement(Dropzone, {\n    id: \"direct-upload-dropzone\",\n    disableClick: true,\n    multiple: false,\n    accept: \"image/*\",\n    style: {\n      position: 'relative'\n    },\n    onDrop: onPhotoSelected.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"direct_upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"New Photo\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Direct upload from the browser with React File Upload\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"You can also drag and drop an image file into the dashed area.\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"form_line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    path: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Title:\"), React.createElement(\"div\", {\n    class: \"form_controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    ref: function ref(titleEl) {\n      return _this2.titleEl = titleEl;\n    },\n    class: \"form-control\",\n    placeholder: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))))))));\n}\n\nexport default UploadForm;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutterStock/shutter_stock/src/components/form.js"],"names":["React","useState","Image","Video","Transformation","CloudinaryContext","Dropzone","request","onPhotoSelected","files","url","title","titleEl","value","file","photoId","fileName","name","post","field","context","uploadPreset","on","progress","onPhotoUploadProgress","end","error","response","onPhotoUploaded","UploadForm","props","position","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\n\nfunction onPhotoSelected(files) {\n    const url = `https://api.cloudinary.com/v1_1/diegolealb/upload`;\n    const title = this.titleEl.value;\n\n    for (let file of files) {\n        const photoId = this.photoId++;\n        const fileName = file.name;\n        request.post(url)\n            .field('upload_preset', this.context.uploadPreset)\n            .field('file', file)\n            .field('multiple', true)\n            .field('tags', title ? `myphotoalbum,${title}` : 'myphotoalbum')\n            .field('context', title ? `photo=${title}` : '')\n            .on('progress', (progress) => this.onPhotoUploadProgress(photoId, file.name, progress))\n            .end((error, response) => {\n                this.onPhotoUploaded(photoId, fileName, response);\n            });\n    }\n}\n\nfunction UploadForm(props) {\n    // [image, setImage] = useState('');\n\n    return (\n        <CloudinaryContext cloudName=\"diegolealb\">\n            <div>\n                <h1>Hello</h1>\n                <Dropzone\n                    id=\"direct-upload-dropzone\"\n                    disableClick={true}\n                    multiple={false}\n                    accept=\"image/*\"\n                    style={{ position: 'relative' }}\n                    onDrop={onPhotoSelected.bind(this)}\n                >\n                    <div id=\"direct_upload\">\n                        <h1>New Photo</h1>\n                        <h2>\n                            Direct upload from the browser with React File\n                            Upload\n                        </h2>\n                        <p>\n                            You can also drag and drop an image file into the\n                            dashed area.\n                        </p>\n                        <form>\n                            <div class=\"form_line\">\n                            <label path=\"title\">Title:</label>\n                                <div class=\"form_controls\">\n                                    <input\n                                        type=\"text\"\n                                        ref={titleEl =>\n                                            (this.titleEl = titleEl)\n                                        }\n                                        class=\"form-control\"\n                                        placeholder=\"Title\"\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </Dropzone>\n                {/* <Image publicId=\"sample\" width=\"720\"/> */}\n            </div>\n        </CloudinaryContext>\n    )\n}\n\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}