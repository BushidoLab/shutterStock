{"ast":null,"code":"import _regeneratorRuntime from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/diego/Documents/ethereum/shutterStock/shutter-stock/src/components/cloudinaryWidget.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Button } from \"antd\";\nvar URL = \"http://localhost:8080/api/createRecord\";\n\nvar CloudinaryWidget =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CloudinaryWidget, _React$Component);\n\n  function CloudinaryWidget() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CloudinaryWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CloudinaryWidget)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.getMetamask =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var provider, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (typeof window.ethereum !== 'undefined' || typeof window.web3 !== 'undefined') {\n                // Web3 browser user detected. You can now use the provider.\n                provider = window['ethereum'] || window.web3.currentProvider;\n              }\n\n              _context.next = 3;\n              return window.ethereum.enable();\n\n            case 3:\n              accounts = _context.sent;\n              console.log(accounts);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.showWidget = function () {\n      var widget = window.cloudinary.createUploadWidget({\n        cloudName: \"diegolealb\",\n        uploadPreset: \"default_preset\"\n      }, function (error, result) {\n        _this.checkUploadResult(result);\n\n        if (result.event === 'success') {\n          _this.postRequest(result);\n        }\n      });\n      console.log(widget);\n      widget.open();\n    };\n\n    _this.checkUploadResult = function (resultEvent) {\n      if (resultEvent.event === \"success\") {}\n\n      console.log('resultEvent: ', resultEvent);\n    };\n\n    _this.postRequest = function (payload) {\n      axios.post(URL, payload).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CloudinaryWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMetamask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showWidget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Add Image\"));\n    }\n  }]);\n\n  return CloudinaryWidget;\n}(React.Component);\n\nexport default CloudinaryWidget;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutterStock/shutter-stock/src/components/cloudinaryWidget.js"],"names":["React","axios","Button","URL","CloudinaryWidget","getMetamask","window","ethereum","web3","provider","currentProvider","enable","accounts","console","log","showWidget","widget","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","checkUploadResult","event","postRequest","open","resultEvent","payload","post","then","res","catch","err","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,MAAvB;AAEA,IAAMC,GAAG,GAAC,wCAAV;;IAEMC,gB;;;;;;;;;;;;;;;;;UAKFC,W;;;;6BAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,kBAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA3B,IACI,OAAOD,MAAM,CAACE,IAAd,KAAuB,WAD/B,EAC6C;AAEzC;AACMC,gBAAAA,QAHmC,GAGxBH,MAAM,CAAC,UAAD,CAAN,IAAsBA,MAAM,CAACE,IAAP,CAAYE,eAHV;AAIxC;;AANK;AAAA,qBAOiBJ,MAAM,CAACC,QAAP,CAAgBI,MAAhB,EAPjB;;AAAA;AAOAC,cAAAA,QAPA;AAQNC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAWdG,U,GAAa,YAAM;AACf,UAAIC,MAAM,GAAGV,MAAM,CAACW,UAAP,CAAkBC,kBAAlB,CAAqC;AAC9CC,QAAAA,SAAS,EAAE,YADmC;AAE9CC,QAAAA,YAAY,EAAE;AAFgC,OAArC,EAGV,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAClB,cAAKC,iBAAL,CAAuBD,MAAvB;;AACA,YAAIA,MAAM,CAACE,KAAP,KAAiB,SAArB,EAAgC;AAC5B,gBAAKC,WAAL,CAAiBH,MAAjB;AACH;AACJ,OARY,CAAb;AASAT,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAA,MAAAA,MAAM,CAACU,IAAP;AACH,K;;UAEDH,iB,GAAoB,UAACI,WAAD,EAAiB;AACjC,UAAIA,WAAW,CAACH,KAAZ,KAAsB,SAA1B,EAAqC,CACpC;;AACDX,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Ba,WAA7B;AACH,K;;UAEDF,W,GAAc,UAACG,OAAD,EAAa;AACvB3B,MAAAA,KAAK,CAAC4B,IAAN,CAAW1B,GAAX,EAAgByB,OAAhB,EACKE,IADL,CACU,UAAAC,GAAG,EAAI;AACTlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACH,OAHL,EAIKC,KAJL,CAIW,UAAAC,GAAG,EAAI;AACVpB,QAAAA,OAAO,CAACQ,KAAR,CAAcY,GAAd;AACH,OANL;AAOH,K;;;;;;;wCA3CmB;AAChB,WAAK5B,WAAL;AACH;;;6BA2CQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAKU,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH;;;;EApD0Bf,KAAK,CAACkC,S;;AAwDrC,eAAe9B,gBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport { Button } from \"antd\";\n\nconst URL=\"http://localhost:8080/api/createRecord\";\n\nclass CloudinaryWidget extends React.Component {\n    componentDidMount() {\n        this.getMetamask();\n    }\n    \n    getMetamask = async () => {\n        if (typeof window.ethereum !== 'undefined'\n            || (typeof window.web3 !== 'undefined')) {\n            \n            // Web3 browser user detected. You can now use the provider.\n            const provider = window['ethereum'] || window.web3.currentProvider\n            }\n            const accounts = await window.ethereum.enable();\n            console.log(accounts);\n      }\n\n    showWidget = () => {\n        let widget = window.cloudinary.createUploadWidget({\n            cloudName: \"diegolealb\",\n            uploadPreset: \"default_preset\"\n        }, (error, result) => {\n            this.checkUploadResult(result);\n            if (result.event === 'success') {\n                this.postRequest(result);\n            }\n        });\n        console.log(widget);\n        widget.open();\n    }\n\n    checkUploadResult = (resultEvent) => {\t\n        if (resultEvent.event === \"success\") {\t\n        }\t\n        console.log('resultEvent: ', resultEvent);\t\t\n    };\n\n    postRequest = (payload) => {\n        axios.post(URL, payload)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    };\n\n    render() {\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showWidget}>Add Image</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default CloudinaryWidget;\n"]},"metadata":{},"sourceType":"module"}