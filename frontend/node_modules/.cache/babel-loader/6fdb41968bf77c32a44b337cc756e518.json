{"ast":null,"code":"import _classCallCheck from \"/home/diego/Documents/ethereum/shutter_stock/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/diego/Documents/ethereum/shutter_stock/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/diego/Documents/ethereum/shutter_stock/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/diego/Documents/ethereum/shutter_stock/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/diego/Documents/ethereum/shutter_stock/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/diego/Documents/ethereum/shutter_stock/src/components/form.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Image, Transformation, CloudinaryContext } from 'cloudinary-react'; // Format for api calls is https://<apiKey>:<apiSecret>@api.cloudinary.com/<path>\n\nvar CLOUDINARY_URL = \"https://684518815981178:28_JNXsgqpczG-2Rl4cCd4oZ1PM@api.cloudinary.com/v1_1/diegolealb/resources/image\";\n\nvar ImageUploadForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageUploadForm, _React$Component);\n\n  function ImageUploadForm(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUploadForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUploadForm).call(this, props));\n\n    _this.checkUploadResult = function (resultEvent) {\n      if (resultEvent.event === 'success') {} // console.log(this.props.currentUser.id);\n      // this.props.postPhoto({user_id: this.props.currentUser.id,\n      // caption: '',\n      // url: resultEvent.info.secure_url})\n      //   .then(this.props.history.push('/profile'))\n      // console.log(resultEvent)\n\n    };\n\n    _this.showWidget = function () {\n      var widget = window.cloudinary.createUploadWidget({\n        cloudName: 'diegolealb',\n        uploadPreset: 'default_preset'\n      }, function (error, result) {\n        _this.checkUploadResult(result);\n      });\n      widget.open();\n    };\n\n    _this.state = {\n      gallery: []\n    };\n    return _this;\n  }\n\n  _createClass(ImageUploadForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var xhr = new XMLHttpRequest();\n      var jsonObj,\n          status = false;\n      xhr.setRequestHeader({\n        header: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      xhr.open(\"GET\", CLOUDINARY_URL, true);\n\n      xhr.onload = function (e) {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var json_obj = JSON.parse(xhr.responseText);\n            status = true;\n            this.setState({\n              gallery: json_obj\n            });\n          } else {\n            console.error(xhr.statusText);\n          }\n        }\n      }.bind(this);\n\n      xhr.onerror = function (e) {\n        console.error(xhr.statusText);\n      };\n\n      xhr.send(null); // axios.get(CLOUDINARY_URL, { \n      //     headers: {\n      //         \"Access-Control-Allow-Origin\": \"*\",\n      //         'X-Requested-With': 'XMLHttpRequest'\n      //     }\n      // }).then(res => {\n      //         console.log('Axios response: ', res);\n      //         this.setState({ gallery: res });\n      //     })\n      //     .catch(err => {\n      //         console.error('Axios call: ',err);\n      //     })\n    }\n  }, {\n    key: \"uploadWidget\",\n    value: function uploadWidget() {\n      return React.createElement(CloudinaryContext, {\n        cloudName: \"diegolealb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"cloudinary.openUploadWidget(\", \", function (err, result) \", console.log('result'), \")\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"mainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Gallery\"), React.createElement(\"div\", {\n        className: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.showWidget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Add Image\")), React.createElement(CloudinaryContext, {\n        cloudName: \"diegolealb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.gallery.map(function (data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, console.log('data', data), React.createElement(\"div\", {\n          className: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Image, {\n          publicId: \"asdf\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Transformation, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }))));\n      })));\n    }\n  }]);\n\n  return ImageUploadForm;\n}(React.Component);\n\nexport default ImageUploadForm;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutter_stock/src/components/form.js"],"names":["React","axios","Image","Transformation","CloudinaryContext","CLOUDINARY_URL","ImageUploadForm","props","checkUploadResult","resultEvent","event","showWidget","widget","window","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","open","state","gallery","xhr","XMLHttpRequest","jsonObj","status","setRequestHeader","header","onload","e","readyState","json_obj","JSON","parse","responseText","setState","console","statusText","bind","onerror","send","log","map","data","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {\n    Image,\n    Transformation,\n    CloudinaryContext\n} from 'cloudinary-react';\n\n// Format for api calls is https://<apiKey>:<apiSecret>@api.cloudinary.com/<path>\nconst CLOUDINARY_URL=\"https://684518815981178:28_JNXsgqpczG-2Rl4cCd4oZ1PM@api.cloudinary.com/v1_1/diegolealb/resources/image\";\n\nclass ImageUploadForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gallery: []\n        }\n    }\n\n    componentDidMount() {\n        var xhr = new XMLHttpRequest();\n        var jsonObj, status = false;\n        xhr.setRequestHeader({header: {\n            \"Access-Control-Allow-Origin\": \"*\",\n        }})\n        xhr.open(\"GET\", CLOUDINARY_URL, true);\n        xhr.onload = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          var json_obj = JSON.parse(xhr.responseText);\n          status = true;\n          this.setState({ gallery: json_obj });\n        } else {\n          console.error(xhr.statusText);\n        }\n      }\n        }.bind(this);\n        xhr.onerror = function (e) {\n        console.error(xhr.statusText);\n        };\n        xhr.send(null);\n\n\n        // axios.get(CLOUDINARY_URL, { \n        //     headers: {\n        //         \"Access-Control-Allow-Origin\": \"*\",\n        //         'X-Requested-With': 'XMLHttpRequest'\n        //     }\n        // }).then(res => {\n        //         console.log('Axios response: ', res);\n        //         this.setState({ gallery: res });\n        //     })\n        //     .catch(err => {\n        //         console.error('Axios call: ',err);\n        //     })\n    }\n\n\n    uploadWidget() {\n        return (\n            <CloudinaryContext cloudName=\"diegolealb\">\n                cloudinary.openUploadWidget({\n                }, function (err, result) {\n                    console.log('result')\n                })\n            </CloudinaryContext>\n        )\n    }\n\n    checkUploadResult = (resultEvent) => {\n        if (resultEvent.event === 'success') {\n            // console.log(this.props.currentUser.id);\n            // this.props.postPhoto({user_id: this.props.currentUser.id,\n            // caption: '',\n            // url: resultEvent.info.secure_url})\n            //   .then(this.props.history.push('/profile'))\n        }\n        // console.log(resultEvent)\n    }\n\n    showWidget = () => {\n        let widget = window.cloudinary.createUploadWidget({\n            cloudName: 'diegolealb',\n            uploadPreset: 'default_preset'\n        }, (error, result) => { \n            this.checkUploadResult(result) \n        });\n        widget.open();\n    }\n\n    render() {\n\n        return (\n            <div className=\"mainContainer\">\n                <h1>Gallery</h1>\n                <div className=\"upload\">\n                    <button onClick={this.showWidget}>Add Image</button>\n                </div>\n                <CloudinaryContext cloudName=\"diegolealb\">\n                    {\n                        this.state.gallery.map(data => {\n                            return (\n                                <div>\n                                {console.log('data', data)}\n                                    <div className=\"img\">\n                                        <Image publicId={\"asdf\"}>\n                                            <Transformation />\n                                        </Image>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </CloudinaryContext>\n            </div>\n        )\n    }\n}\n\nexport default ImageUploadForm;"]},"metadata":{},"sourceType":"module"}