{"ast":null,"code":"import _objectSpread from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/diego/Documents/ethereum/shutterStock/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/diego/Documents/ethereum/shutterStock/frontend/src/components/cloudinaryWidget.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Button } from \"antd\";\nvar POSTRECORD_URL = \"http://localhost:8080/api/createRecord\";\nvar UPDATERECORD_URL = \"http://localhost:8080/api/updateRecord\";\nvar accounts;\nvar txHash;\n\nvar CloudinaryWidget =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CloudinaryWidget, _React$Component);\n\n  function CloudinaryWidget() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CloudinaryWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CloudinaryWidget)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.getMetamask =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var provider;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (typeof window.ethereum !== 'undefined' || typeof window.web3 !== 'undefined') {\n                provider = window['ethereum'] || window.web3.currentProvider;\n              }\n\n              _context.next = 3;\n              return window.ethereum.enable();\n\n            case 3:\n              accounts = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.showWidget =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var widget;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              widget = window.cloudinary.createUploadWidget({\n                cloudName: \"diegolealb\",\n                uploadPreset: \"default_preset\"\n              }, function (error, result) {\n                if (result.event === 'success') {\n                  try {\n                    _this.checkUploadResult(result);\n\n                    _this.createTransaction(result);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }\n              });\n              widget.open();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.createTransaction =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(result) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.sendTransaction();\n\n              case 2:\n                txHash = _context3.sent;\n                _context3.next = 5;\n                return _this.postRequest(result, txHash);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.sendTransaction =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              params = [{\n                \"from\": accounts[0],\n                \"to\": \"0x4fc03322307e64842c841198750be5839e815ca7\",\n                \"gas\": \"30400\",\n                \"gasPrice\": \"1000\",\n                \"value\": \"1\"\n              }];\n              console.log(window.ethereum);\n              window.ethereum.sendAsync({\n                method: 'eth_sendTransaction',\n                params: params,\n                from: accounts[0] // Provide the user's account to use.\n\n              }, function (err, res) {\n                if (err) {\n                  console.err(err);\n                  return;\n                }\n\n                ;\n                txHash = res.result;\n                return txHash;\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    _this.checkUploadResult = function (resultEvent) {\n      if (resultEvent.event === \"success\") {}\n\n      console.log('resultEvent: ', resultEvent);\n    };\n\n    _this.postRequest = function (payload, txHash) {\n      console.log('postrequest');\n      payload = _objectSpread({\n        txHash: txHash\n      }, payload);\n      console.log(payload);\n      axios.post(POSTRECORD_URL, payload).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CloudinaryWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMetamask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showWidget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Add Image\"));\n    }\n  }]);\n\n  return CloudinaryWidget;\n}(React.Component);\n\nexport default CloudinaryWidget;","map":{"version":3,"sources":["/home/diego/Documents/ethereum/shutterStock/frontend/src/components/cloudinaryWidget.js"],"names":["React","axios","Button","POSTRECORD_URL","UPDATERECORD_URL","accounts","txHash","CloudinaryWidget","getMetamask","window","ethereum","web3","provider","currentProvider","enable","showWidget","widget","cloudinary","createUploadWidget","cloudName","uploadPreset","error","result","event","checkUploadResult","createTransaction","err","console","open","sendTransaction","postRequest","params","log","sendAsync","method","from","res","resultEvent","payload","post","then","catch","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport { Button } from \"antd\";\n\nconst POSTRECORD_URL = \"http://localhost:8080/api/createRecord\";\nconst UPDATERECORD_URL = \"http://localhost:8080/api/updateRecord\";\nlet accounts;\nlet txHash;\n\nclass CloudinaryWidget extends React.Component {\n    componentDidMount() {\n        this.getMetamask();\n    }\n\n    getMetamask = async () => {\n        if (typeof window.ethereum !== 'undefined' || (typeof window.web3 !== 'undefined')) {\n            const provider = window['ethereum'] || window.web3.currentProvider\n        }\n        accounts = await window.ethereum.enable();\n    }\n\n    showWidget = async () => {\n        let widget = window.cloudinary.createUploadWidget({\n            cloudName: \"diegolealb\",\n            uploadPreset: \"default_preset\"\n        }, (error, result) => {\n            if (result.event === 'success') {\n                try {\n                    this.checkUploadResult(result);\n                    this.createTransaction(result);\n                } catch (err) {\n                    console.error(err);\n                }\n            }\n        });\n        widget.open();\n    }\n\n    createTransaction= async(result) => {\n        txHash = await this.sendTransaction();\n        await this.postRequest(result, txHash);\n    }\n\n    sendTransaction = async () => {\n        let params = [{\n            \"from\": accounts[0],\n            \"to\": \"0x4fc03322307e64842c841198750be5839e815ca7\",\n            \"gas\": \"30400\",\n            \"gasPrice\": \"1000\",\n            \"value\": \"1\",\n        }];\n        console.log(window.ethereum)\n        window.ethereum.sendAsync({\n            method: 'eth_sendTransaction',\n            params: params,\n            from: accounts[0], // Provide the user's account to use.\n        }, function (err, res) {\n            if (err) {\n                console.err(err)\n                return;\n            };\n\n            txHash = res.result;\n            return txHash;\n        })\n    }\n\n    checkUploadResult = (resultEvent) => {\n        if (resultEvent.event === \"success\") {}\n        console.log('resultEvent: ', resultEvent);\n    };\n\n    postRequest = (payload, txHash) => {\n        console.log('postrequest')\n        payload = { txHash, ...payload };\n        console.log(payload);\n        axios.post(POSTRECORD_URL, payload)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    };\n\n    render() {\n        return ( \n        <div>\n            <Button type = \"primary\" onClick = { this.showWidget }>\n                Add Image\n            </Button> \n        </div>\n        )\n    }\n}\n\n\nexport default CloudinaryWidget;"]},"metadata":{},"sourceType":"module"}